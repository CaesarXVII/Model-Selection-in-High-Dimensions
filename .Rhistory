n = 1000
p = 5
set.seed = 12345
location_vector = c(1,2,3,4,5)
my_data = MASS::mvrnorm(n = n, mu = location_vector, Sigma = diag(nrow=p))
generating_vector = c(3, 1.5, 0, 2, 0)
rm(list=ls())
n = 1000
p = 5
set.seed = 12345
location_vector = c(1,2,3,4,5)
X_mat = MASS::mvrnorm(n = n, mu = location_vector, Sigma = diag(nrow=p))
generating_vector = c(3, 1.5, 0, 2, 0)
n = 1000
p = 5
set.seed(12345)
location_vector = c(1,2,3,4,5)
X_mat = MASS::mvrnorm(n = n, mu = location_vector, Sigma = diag(nrow=p))
generating_vector = c(3, 1.5, 0, 2, 0)
set.seed(123456)
epsilon = rnorm(n = n, sd = 1)
y = X_mat %*% generating_vector + epsilon
colnames(X_mat) = paste("X", seq(5), sep="_")
head(X_mat)
potentia_models_size_2 = combn(colnames(X_mat), m = 2)
potential_models_size_2 = combn(colnames(X_mat), m = 2)
potential_models_size_2
potential_models_size_2 = combn(colnames(X_mat), m = 2)
potential_models_size_3 = combn(colnames(X_mat), m = 3)
potential_models_size_4 = combn(colnames(X_mat), m = 4)
potential_models_size_2
potential_models_size_3
potential_models_size_4
potential_models_size_1 = combn(colnames(X_mat), m = 1)
potential_models_size_2 = combn(colnames(X_mat), m = 2)
potential_models_size_3 = combn(colnames(X_mat), m = 3)
potential_models_size_4 = combn(colnames(X_mat), m = 4)
potential_models_size_5 = combn(colnames(X_mat), m = 5)
dim(potential_models_size_1)[2]
nbr_models = dim(potential_models_size_1)[2] +
dim(potential_models_size_2)[2] +
dim(potential_models_size_3)[2] +
dim(potential_models_size_4)[2] +
dim(potential_models_size_5)[2]
nbr_models
potential_models_size_1 = combn(colnames(X_mat), m = c(1,2))
potential_models_size_1 = combn(colnames(X_mat), m = 1, simplify = F)
potential_models_size_1
list_all_models = list(potential_models_size_1, potential_models_size_2)
list_all_models
potential_models_size_1 = combn(colnames(X_mat), m = 1, simplify = F)
potential_models_size_2 = combn(colnames(X_mat), m = 2, simplify = F)
potential_models_size_3 = combn(colnames(X_mat), m = 3, simplify = F)
potential_models_size_4 = combn(colnames(X_mat), m = 4, simplify = F)
potential_models_size_5 = combn(colnames(X_mat), m = 5, simplify = F)
list_all_models = list(potential_models_size_1, potential_models_size_2)
list_all_models
list_all_models = list(potential_models_size_1, unlist(potential_models_size_2))
list_all_models
c(potential_models_size_1, potential_models_size_2)
potential_models_size_1 = combn(colnames(X_mat), m = 1, simplify = F)
potential_models_size_2 = combn(colnames(X_mat), m = 2, simplify = F)
potential_models_size_3 = combn(colnames(X_mat), m = 3, simplify = F)
potential_models_size_4 = combn(colnames(X_mat), m = 4, simplify = F)
potential_models_size_5 = combn(colnames(X_mat), m = 5, simplify = F)
list_all_potential_models = c(potential_models_size_1,
potential_models_size_2,
potential_models_size_3,
potential_models_size_4,
potential_models_size_5)
nbr_models = length(list_all_potential_models)
nbr_models
nbr_potential_models = 0
for(i in seq(100)){
nbr_potential_models = nbr_potential_models + dim(combn(1:100, m = i))[2]
}
i=1
dim(combn(1:100, m = i))[2]
i=2
dim(combn(1:100, m = i))[2]
i=50
nbr_potential_models = nbr_potential_models + dim(combn(1:100, m = i))[2]
nbr_potential_models = 0
i=50
nbr_potential_models = nbr_potential_models + dim(combn(1:100, m = i))[2]
i=20
dim(combn(1:100, m = i))[2]
i=10
dim(combn(1:100, m = i))[2]
compute_number_potential_models = function(p){
nbr_models = 0
for(i in seq(p)){
nbr_models = nbr_models + dim(combn(x=1:p, m = i))[2]
}
}
compute_number_potential_models(5)
compute_number_potential_models = function(p){
nbr_models = 0
for(i in seq(p)){
nbr_models = nbr_models + dim(combn(x=1:p, m = i))[2]
}
return(nbr_models)
}
compute_number_potential_models(5)
compute_number_potential_models(10)
2^5
compute_number_potential_models(2)
compute_number_potential_models(3)
compute_number_potential_models(4)
compute_number_potential_models(5)
xx = compute_number_potential_models(1:20)
sapply(1:15, compute_number_potential_models)
sapply(1:20, compute_number_potential_models)
sapply(1:15, compute_number_potential_models)
yy = sapply(1:15, compute_number_potential_models)
plot(xx, yy, ylab="Number of potential models", xlab = "Number of observed covariates")
xx = 1:15
yy = sapply(1:15, compute_number_potential_models)
plot(xx, yy, ylab="Number of potential models", xlab = "Number of observed covariates")
plot(xx, yy, ylab="Number of potential models", xlab = "Number of observed covariates", type="l")
xx = 1:18
yy = sapply(1:15, compute_number_potential_models)
plot(xx, yy, ylab="Number of potential models", xlab = "Number of observed covariates", type="l")
yy = sapply(xx, compute_number_potential_models)
yy = sapply(xx, compute_number_potential_models)
plot(xx, yy, ylab="Number of potential models", xlab = "Number of observed covariates", type="l")
plot(xx, yy, ylab="Number of potential models", xlab = "Number of observed covariates", type="l", las=2)
plot(xx, yy, ylab="Number of potential models", xlab = "Number of observed covariates", type="l", las=2, log="y")
plot(xx, yy, ylab="Number of potential models", xlab = "Number of observed covariates", type="l", las=2)
plot(xx, yy, ylab="Number of potential models", xlab = "Number of observed covariates", type="l", las=2, cex.lab=.5)
plot(xx, yy, ylab="Number of potential models", xlab = "Number of observed covariates", type="l", las=2, cex.axis=.5)
plot(xx, yy, ylab="Number of potential models", xlab = "Number of observed covariates", type="l", las=2, cex.axis=.8)
plot(xx, yy, ylab="Number of potential models", xlab = "Number of observed covariates", type="l", las=2, cex.axis=.6)
xaringan:::inf_mr()
id_set_1 = sample(x=1:n, replace = F, size = n/2)
set.seed(123)
id_set_1 = sample(x=1:n, replace = F, size = n/2)
1:1000 %in% id_set_1
set.seed(123)
id_set_1 = sample(x=1:n, replace = F, size = n/2)
id_set_2 = which(!(1:1000 %in% id_set_1))
id_set_1
id_set_1 = sample(x=1:n, replace = F, size = n/2) %>% sort()
set.seed(123)
id_set_1 = sample(x=1:n, replace = F, size = n/2) %>% sort()
set.seed(123)
id_set_1 = sample(x=1:n, replace = F, size = n/2) %>% sort()
id_set_2 = which(!(1:1000 %in% id_set_1))  %>% sort()
id_set_1
id_set_2
potential_models_size_1 = combn(colnames(X_mat), m = 1, simplify = F)
potential_models_size_2 = combn(colnames(X_mat), m = 2, simplify = F)
potential_models_size_3 = combn(colnames(X_mat), m = 3, simplify = F)
potential_models_size_4 = combn(colnames(X_mat), m = 4, simplify = F)
potential_models_size_5 = combn(colnames(X_mat), m = 5, simplify = F)
list_all_potential_models = c(potential_models_size_1,
potential_models_size_2,
potential_models_size_3,
potential_models_size_4,
potential_models_size_5)
nbr_models = length(list_all_potential_models)
mat_res_rmse_cv = matrix(ncol=2, nrow=nbr_models)
set.seed(123)
id_set_1 = sample(x=1:n, replace = F, size = n/2) %>% sort()
id_set_2 = which(!(1:1000 %in% id_set_1))  %>% sort()
