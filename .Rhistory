attach(Zambia)
attach(Zambia.SAV)
attach("Zambia.SAV")
library(foreign)
df <- read.spss("data.sav", to.data.frame = TRUE)
df <- read.spss("Zambia.sav", to.data.frame = TRUE)
df <- read.spss("Zambia.SAV", to.data.frame = TRUE)
require(foreign)
dat = read.spss("Zambia.SAV")
getwd()
setwd("/Users/kieranschubert/Desktop/Statistics/2nd Semester/Model Selection in High Dimensions/Model Selection in High Dimensions/Practical 2")
setwd("/Users/kieranschubert/Desktop/Statistics/2nd Semester/Model Selection in High Dimensions/Model Selection in High Dimensions/")
ls()
setwd("/Users/kieranschubert/Desktop/Statistics/2nd Semester/Model Selection in High Dimensions/Model Selection in High Dimensions/Practicals/Practical 2")
require(foreign)
dat = read.spss("Zambia.SAV")
warnings()
str(dat)
summary(dat)
y = dat$HW70
head(y)
y
is.na(y)
y[y == 9996] = NA
y[y == 9997] = NA
y[y == 9998] = NA
y[y == 9999] = NA
# Revert tranformation (i.e. z-score)
y = y/100
dat = read.spss("Zambia.SAV")
# Extract response variable i.e. HW70 Height for age standard deviation (according to WHO)
y = dat$HW70
y[y == 9996] = NA
y[y == 9997] = NA
y[y == 9998] = NA
y[y == 9999] = NA
# Revert tranformation (i.e. z-score)
y = y/100
# Variable 1: The calculated months of breastfeeding gives the duration of breastfeeding
x1 = dat$M5
x1[x1 == 94] = 0
x1[x1 == 97] = NA
x1[x1 == 98] = NA
x1[x1 == 99] = NA
x1[x1 > 40] = NA
# Variable 2: Age in months of the child
x2 = dat$HW1
# Variable 3: Age of the mother at birth
x3 = dat$V012 - dat$B8
x3[x3>45] = NA
# Variable 4: Body mass index (BMI) of the mother
x4 = dat$V445
x4 = x4/100  # no sense without this division
# Variable 5: Height of the mother in meters
x5 = dat$V438
x5[x5 == 9998] = NA
x5[x5 == 9999] = NA
x5[x5 < 1300] = NA
x5[x5 > 1900] = NA
x5 = x5/1000  # it was in mm, we need to transform from original
# Variable 6: Weight of the mother in kilograms
x6 = dat$V437
x6=x6/10 # we need to go back to Kg
x7 = as.factor(dat$V101)
x7 = model.matrix(~x7-1)
dim(x7)
# Variable 8: Mother highest education level attended
x8 = as.factor(dat$V106)
x8 = model.matrix(~x8-1)
dim(x8)
# Variable 9: Wealth index factor score
x9 = dat$V191
# Variable 10: Weight of child at birth given in kilograms with three implied decimal places
x10 = dat$M19
x10[x10 == 9996] = NA
x10[x10 == 9997] = NA
x10[x10 == 9998] = NA
x10[x10 == 9999] = NA
x10 = x10/1000
x10
is.na(x10)
sum(is.na(x10))
# Variable 11: Child Sex
x11 = dat$B4
# Variable 12: Preceding birth interval is calculated as the difference in months between the current birth and the previous birth
x12 = dat$B11
x12[x12 > 125] = NA
# Variable 13: Drinking Water
x13 = dat$V113
x13 = model.matrix(~x13-1)
x13 = x13[,c(2,3,4,8,9,13,17,18)]
dim(x13)
levels(x13)
mat.sys = na.omit(cbind(y,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13))
dim(mat.sys)[2]
# Number of regressor
p = dim(mat.sys)[2]
p
# Construct X and Y
y = mat.sys[,1]
y
X = mat.sys[,2:p]
str(X)
data_zambia = cbind(y,X)
data_zambia = data.frame(data_zambia)
colnames(data_zambia) = c("Height for age sd", "Breastfeeding duration (months)","Age of the child (months)", "Age of the mother (years)", "BMI mother", "Heigth mother (meter)", "Weight mother (kg)", "Region:Central", "Region:Copperbelt", "Region:Eastern", "Region:Luapula", "Region:Lusaka", "Region:Northern", "Region:Northwestern", "Region:Southern", "Region:Western", "Ed:No education", "Ed:Primary", "Ed:Secondary", "Ed:Higher", "Wealth index factor score", "Child weight at birth (kg)", "Child sex", "Interval between births","Water:Piped into dwelling", "Water:Piped to yard/plot", "Water:Public tap/standpipe", "Water:Protected well", "Water:Unprotected well", "Water:River/dam/lake/ponds/stream/canal/irrigation channel", "Water:Bottled water", "Water:Other")
attach(data_zambia)
lm_zambia = lm(`Height for age sd` ~ . -`Region:Central`- `Ed:No education`, data = data_zambia)
leukemia_big <- read.csv("http://web.stanford.edu/~hastie/CASI_files/DATA/leukemia_big.csv")
leukemia_mat = as.matrix(leukemia_big)
dim(leukemia_mat)
leukemia_mat = t(leukemia_mat) #this is the design matrix for the analysis
y = c(rep(1,20),rep(0,14), rep(1,27), rep(0,11))  #the response vector
length(y)
X = leukemia_mat
dim(X)
model_glm = glm(formula = y ~ X,family = "binomial")
summary(model_glm)  #singularity issues in the IWLS algorithm of GLM. It is impossible to invert the matrix.
data("leukemia.train")
################################### LEUKEMIA DATASET ###################################
install.packages("SIS")
library(SIS)
data("leukemia.train")
data("leukemia.test")
data("prostate.train")
