setwd("/Users/TaliaKimber/Documents/Unige/2_MA/Model_Selection/Model_Selection/Group A")
leukemia_big <- read.csv("http://web.stanford.edu/~hastie/CASI_files/DATA/leukemia_big.csv")
knitr::opts_chunk$set(echo = TRUE)
library(SIS)
library(MASS)
library(rpart)
library(rpart.plot)
library(tree)
leukemia_big <- read.csv("http://web.stanford.edu/~hastie/CASI_files/DATA/leukemia_big.csv")
leukemia_mat <- t(as.matrix(leukemia_big))
# 20 ALL, 14 AML, 27 ALL, 11 AML
y = c(rep(1,20),rep(0,14), rep(1,27), rep(0,11))
X = leukemia_mat
set.seed(11)
index <- sample(1:nrow(leukemia_mat))
y.test <- y[index[1:36]]
X.test <- X[index[1:36],]
y.train <- y[-index[1:36]]
X.train <- X[-index[1:36],]
reg1 <- SIS(x = X.train, y = y.train, family = 'binomial', tune='cv')
reg11 <- SIS(x = X.train, y = y.train, family = 'binomial', tune='aic')
reg111 <- SIS(x = X.train, y = y.train, family = 'binomial', tune='bic')
reg2 <- SIS(x = X.train, y = y.train, family = 'binomial', penalty = 'MCP', tune='cv')
reg22 <- SIS(x = X.train, y = y.train, family = 'binomial', penalty = 'MCP', tune='aic')
reg222 <- SIS(x = X.train, y = y.train, family = 'binomial', penalty = 'MCP', tune='bic')
reg3 <- SIS(x = X.train, y = y.train, family = 'binomial', penalty = 'lasso', tune='cv')
reg33 <- SIS(x = X.train, y = y.train, family = 'binomial', penalty = 'lasso', tune='aic')
reg333 <- SIS(x = X.train, y = y.train, family = 'binomial', penalty = 'lasso', tune='bic')
pred1 <- predict(reg1, newx = X.test, type = 'response')>0.5
pred11 <- predict(reg11, newx = X.test, type = 'response')>0.5
pred111 <- predict(reg111, newx = X.test, type = 'response')>0.5
pred2 <- predict(reg2, newx = X.test, type = 'response')>0.5
pred22 <- predict(reg22, newx = X.test, type = 'response')>0.5
pred222 <- predict(reg222, newx = X.test, type = 'response')>0.5
pred3 <- predict(reg3, newx = X.test, type = 'response')>0.5
pred33 <- predict(reg33, newx = X.test, type = 'response')>0.5
pred333 <- predict(reg333, newx = X.test, type = 'response')>0.5
which((pred1==y.test)==FALSE)
which((pred11==y.test)==FALSE)
which((pred111==y.test)==FALSE)
which((pred2==y.test)==FALSE)
which((pred22==y.test)==FALSE)
which((pred222==y.test)==FALSE)
which((pred3==y.test)==FALSE)
which((pred33==y.test)==FALSE)
which((pred333==y.test)==FALSE)
tran<-t(leukemia_big) #to have the obs in rows
dim(tran)
y = c(rep(1,20),rep(0,14), rep(1,27), rep(0,11))  #the response vector
length(y)
data<-cbind(y,tran)
dim(data)
set.seed(12)
train_ind = sample(seq_len(nrow(data)),size = 36)  # to Randomly split the data
train =data[train_ind,] #creates the training dataset
test=data[-train_ind,]  #creates the test dataset
dim(train)
dim(test)
train <- as.matrix(train)
test<-as.matrix(test)
model1<-SIS(train[,2:7129], train[,1], family = "binomial",penalty = "SCAD",tune="aic")
model1$ix
model1$coef.est
model2<-SIS(train[,2:7129], train[,1], family = "binomial",penalty = "lasso",tune="aic")
model2$ix
model2$coef.est
model3<-SIS(train[,2:7129], train[,1], family = "binomial",penalty = "MCP", tune="aic")
model3$ix
model3$coef.est
p1<-predict(model1, test[,2:7129], lambda = model1$lambda,type="class")
test.error1<-mean(p1 != test[,1])
test.error1
p2<-predict(model2, test[,2:7129], lambda = model2$lambda,type="class")
test.error2<-mean(p2 != test[,1])
test.error2
test.error3
p3<-predict(model3, test[,2:7129], lambda = model3$lambda,type="class")
test.error3<-mean(p3 != test[,1])
test.error3
rm(list=ls())
